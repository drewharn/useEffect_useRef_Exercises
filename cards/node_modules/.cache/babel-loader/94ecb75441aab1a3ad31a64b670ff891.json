{"ast":null,"code":"var _jsxFileName = \"/Users/drewharnedy/Documents/USFCodingBootcamp/ReactJS-Fundamentals/useEffect_useRef_exercises/cards/src/Deck.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\nimport \"./Deck.css\";\nconst API_BASE_URL = \"https://deckofcardsapi.com/api/deck\";\n/** Deck: uses deck API, allows drawing card at a time. */\n\nfunction Deck() {\n  const [deck, setDeck] = useState(null);\n  const [drawn, setDrawn] = useState([]);\n  const [isShuffling, setIsShuffling] = useState(false);\n  useEffect(function loadDeckFromAPI() {\n    async function fetchData() {\n      const d = await axios.get(\"\".concat(API_BASE_URL, \"/new/shuffle/\"));\n      setDeck(d.data);\n    }\n    fetchData();\n  }, []);\n\n  /** Draw card: change the state & effect will kick in. */\n  async function draw() {\n    try {\n      const drawRes = await axios.get(\"\".concat(API_BASE_URL, \"/\").concat(deck.deck_id, \"/draw/\"));\n      if (drawRes.data.remaining === 0) throw new Error(\"Deck empty!\");\n      const card = drawRes.data.cards[0];\n      setDrawn(d => [...d, {\n        id: card.code,\n        name: card.suit + \" \" + card.value,\n        image: card.image\n      }]);\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  /** Shuffle: change the state & effect will kick in. */\n  async function startShuffling() {\n    setIsShuffling(true);\n    try {\n      await axios.get(\"\".concat(API_BASE_URL, \"/\").concat(deck.deck_id, \"/shuffle/\"));\n      setDrawn([]);\n    } catch (err) {\n      alert(err);\n    } finally {\n      setIsShuffling(false);\n    }\n  }\n\n  /** Return draw button (disabled if shuffling) */\n  function renderDrawBtnIfOk() {\n    if (!deck) return null;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Deck-gimme\",\n      onClick: draw,\n      disabled: isShuffling,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"DRAW\");\n  }\n\n  /** Return shuffle button (disabled if already is) */\n  function renderShuffleBtnIfOk() {\n    if (!deck) return null;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Deck-gimme\",\n      onClick: startShuffling,\n      disabled: isShuffling,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"SHUFFLE DECK\");\n  }\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"Deck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, renderDrawBtnIfOk(), renderShuffleBtnIfOk(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Deck-cardarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, drawn.map(c => /*#__PURE__*/React.createElement(Card, {\n    key: c.id,\n    name: c.name,\n    image: c.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }))));\n}\nexport default Deck;","map":{"version":3,"names":["React","useEffect","useState","Card","axios","API_BASE_URL","Deck","deck","setDeck","drawn","setDrawn","isShuffling","setIsShuffling","loadDeckFromAPI","fetchData","d","get","concat","data","draw","drawRes","deck_id","remaining","Error","card","cards","id","code","name","suit","value","image","err","alert","startShuffling","renderDrawBtnIfOk","createElement","className","onClick","disabled","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","renderShuffleBtnIfOk","map","c","key"],"sources":["/Users/drewharnedy/Documents/USFCodingBootcamp/ReactJS-Fundamentals/useEffect_useRef_exercises/cards/src/Deck.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\nimport \"./Deck.css\";\n\nconst API_BASE_URL = \"https://deckofcardsapi.com/api/deck\";\n/** Deck: uses deck API, allows drawing card at a time. */\n\nfunction Deck() {\n    const [deck, setDeck] = useState(null);\n    const [drawn, setDrawn] = useState([]);\n    const [isShuffling, setIsShuffling] = useState(false);\n\n    useEffect(function loadDeckFromAPI() {\n        async function fetchData() {\n            const d = await axios.get(`${API_BASE_URL}/new/shuffle/`);\n            setDeck(d.data);\n        }\n        fetchData();\n    }, []);\n\n    /** Draw card: change the state & effect will kick in. */\n    async function draw() {\n        try {\n            const drawRes = await axios.get(`${API_BASE_URL}/${deck.deck_id}/draw/`);\n\n            if (drawRes.data.remaining === 0) throw new Error(\"Deck empty!\");\n\n            const card = drawRes.data.cards[0];\n\n            setDrawn(d => [\n                ...d,\n                {\n                    id: card.code,\n                    name: card.suit + \" \" + card.value,\n                    image: card.image,\n                },\n            ]);\n        } catch (err) {\n            alert(err);\n        }\n    }\n\n    /** Shuffle: change the state & effect will kick in. */\n    async function startShuffling() {\n        setIsShuffling(true);\n        try {\n            await axios.get(`${API_BASE_URL}/${deck.deck_id}/shuffle/`);\n            setDrawn([]);\n        } catch (err) {\n            alert(err);\n        } finally {\n            setIsShuffling(false);\n        }\n    }\n\n    /** Return draw button (disabled if shuffling) */\n    function renderDrawBtnIfOk() {\n        if (!deck) return null;\n\n        return (\n            <button \n              className=\"Deck-gimme\"\n              onClick={draw}\n              disabled={isShuffling}>\n                DRAW\n              </button>\n        );\n    }\n\n    /** Return shuffle button (disabled if already is) */\n    function renderShuffleBtnIfOk() {\n        if (!deck) return null;\n        return (\n            <button\n              className=\"Deck-gimme\"\n              onClick={startShuffling}\n              disabled={isShuffling}>\n                SHUFFLE DECK\n              </button>\n            );\n        }\n\n        return (\n            <main className=\"Deck\">\n\n                {renderDrawBtnIfOk()}\n                {renderShuffleBtnIfOk()}\n\n                <div className=\"Deck-cardarea\">{\n                drawn.map(c => (\n                    <Card key={c.id} name={c.name} image={c.image} />\n                ))}\n                </div>\n\n            </main>\n    );\n}\n\nexport default Deck;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}